// <auto-generated />
using FinalTask.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FinalTask.Migrations
{
    [DbContext(typeof(FinalTaskContext))]
    partial class FinalTaskContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FinalTask.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            Description = "",
                            Name = "Clothes"
                        },
                        new
                        {
                            CategoryId = 2,
                            Description = "",
                            Name = "Electronics"
                        },
                        new
                        {
                            CategoryId = 3,
                            Description = "",
                            Name = "Toys"
                        });
                });

            modelBuilder.Entity("FinalTask.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(8,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CategoryId = 1,
                            Description = "",
                            ImagePath = "",
                            Price = 25m,
                            Quantity = 10,
                            Title = "Kaps"
                        },
                        new
                        {
                            ProductId = 2,
                            CategoryId = 1,
                            Description = "",
                            ImagePath = "",
                            Price = 30m,
                            Quantity = 100,
                            Title = "Shirts"
                        },
                        new
                        {
                            ProductId = 3,
                            CategoryId = 3,
                            Description = "",
                            ImagePath = "",
                            Price = 15m,
                            Quantity = 20,
                            Title = "Ball"
                        },
                        new
                        {
                            ProductId = 4,
                            CategoryId = 1,
                            Description = "",
                            ImagePath = "",
                            Price = 40m,
                            Quantity = 30,
                            Title = "Jeans"
                        },
                        new
                        {
                            ProductId = 5,
                            CategoryId = 2,
                            Description = "",
                            ImagePath = "",
                            Price = 100m,
                            Quantity = 150,
                            Title = "Smartphones"
                        },
                        new
                        {
                            ProductId = 6,
                            CategoryId = 2,
                            Description = "",
                            ImagePath = "",
                            Price = 200m,
                            Quantity = 123,
                            Title = "Tablets"
                        },
                        new
                        {
                            ProductId = 7,
                            CategoryId = 3,
                            Description = "",
                            ImagePath = "",
                            Price = 50m,
                            Quantity = 112,
                            Title = "Bikes"
                        },
                        new
                        {
                            ProductId = 8,
                            CategoryId = 3,
                            Description = "",
                            ImagePath = "",
                            Price = 150m,
                            Quantity = 133,
                            Title = "Remote Control Car"
                        });
                });

            modelBuilder.Entity("FinalTask.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Email = "mohamed@gmail.com",
                            FirstName = "Mohamed",
                            LastName = "Saad",
                            Password = "123456"
                        },
                        new
                        {
                            UserId = 2,
                            Email = "ahmed@gmail.com",
                            FirstName = "Ahmed",
                            LastName = "Yasser",
                            Password = "123456"
                        },
                        new
                        {
                            UserId = 3,
                            Email = "khaled@gmail.com",
                            FirstName = "Khaled",
                            LastName = "Ali",
                            Password = "123456"
                        },
                        new
                        {
                            UserId = 4,
                            Email = "randa@gmail.com",
                            FirstName = "Randa",
                            LastName = "Adel",
                            Password = "123456"
                        },
                        new
                        {
                            UserId = 5,
                            Email = "tassnim@gmail.com",
                            FirstName = "Tassnim",
                            LastName = "Khaled",
                            Password = "123456"
                        },
                        new
                        {
                            UserId = 6,
                            Email = "rania@gmail.com",
                            FirstName = "Raina",
                            LastName = "Atef",
                            Password = "123456"
                        },
                        new
                        {
                            UserId = 7,
                            Email = "ali@gmail.com",
                            FirstName = "Ali",
                            LastName = "Reda",
                            Password = "123456"
                        },
                        new
                        {
                            UserId = 8,
                            Email = "omar@gmail.com",
                            FirstName = "Omar",
                            LastName = "Adel",
                            Password = "123456"
                        },
                        new
                        {
                            UserId = 9,
                            Email = "rana@gmail.com",
                            FirstName = "Rana",
                            LastName = "Mohamed",
                            Password = "123456"
                        },
                        new
                        {
                            UserId = 10,
                            Email = "amr@gmail.com",
                            FirstName = "Amr",
                            LastName = "Mahmoud",
                            Password = "123456"
                        });
                });

            modelBuilder.Entity("FinalTask.Models.Product", b =>
                {
                    b.HasOne("FinalTask.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("FinalTask.Models.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
